@using MovManagerr.Models

<h2 class="content-block">Accueil</h2>

@(Html.DevExtreme().Button()
        .Text("Delete Favorite Movies")
        .ID("DeleteFavoriteMoviesButton")
)


@(Html.DevExtreme().Button()
        .Text("Add Like New Movies")
        .ID("AddLikeNewMovieButton")
)

@(Html.DevExtreme().Button()
        .Text("Sync Movies")
        .ID("SyncMovieButton")
)

@(Html.DevExtreme().Button()
        .Icon("trash")
        .Text("Delete bad movies")
        .ID("deleteBadMovies")
)


@(Html.DevExtreme().DataGrid<MovieDirectorySpec>()
    .ID("grid-container")
    .ElementAttr(new { @class = "dx-card wide-card" })
    .DataSource(d => d.Mvc().Controller("MovieData").LoadAction("Get").Key("Id"))
    .ShowBorders(false)
    .FilterRow(f => f.Visible(true))
    .ColumnAutoWidth(true)
    .RemoteOperations(true)
    .RepaintChangesOnly(true)
    .Editing(e => e
        .Mode(GridEditMode.Batch)
        .AllowDeleting(true)
    )
    .OnSaving("onSaving")
    .ColumnHidingEnabled(true)
    .Columns(columns => {
       columns.AddFor(m => m.Movie.PosterPath)
            .Width(100)
            .AllowFiltering(false)
            .AllowSorting(false)
            .Caption("")
            .CellTemplate(@<text>
                    <div>
                        <img style="width:90px; height:auto" src="https://image.tmdb.org/t/p/w200/<%- value %>" alt=""/>
                    </div>
            </text>);
        columns.AddFor(m => m.Movie.Title).Caption("Titre du film");
        columns.AddFor(m => m.Gb).Caption("Taille du fichier");
        columns.AddFor(m => m.FullPath).Caption("Chemin du film");
    })
    .Paging(p => p.PageSize(10))
    .Pager(p => p
        .ShowPageSizeSelector(true)
        .AllowedPageSizes(new[] { 5, 10, 20, 50, 100 })
        .ShowInfo(true)
    )
)


<script>    
    function onSaving(e) {
        e.cancel = true;

        if (e.changes.length) {
            e.promise = sendBatchRequest('@Url.RouteUrl(new { controller = "MovieData", action = "Batch" })', e.changes).done(() => {
                e.component.refresh(true).done(() => {
                    e.component.cancelEditData();
                });
            });
        }
    }
    

    function sendBatchRequest(url, changes) {
        var d = $.Deferred();

        $.ajax(url, {
            method: "POST",
            data: JSON.stringify(changes),
            cache: false,
            contentType: 'application/json',
            xhrFields: { withCredentials: true }
        }).done(d.resolve).fail(function (xhr) {
            d.reject(xhr.responseJSON ? xhr.responseJSON.Message : xhr.statusText);
        });

        return d.promise();
    }

    
    $(function() {
        $("#AddLikeNewMovieButton").dxButton({
            onClick: function() {
                $.ajax({
                    url: "/MovieTask/LikeNewMovie",
                    type: "POST",
                    success: function(data) {
                        DevExpress.ui.notify(data.Message, "success");
                    },
                    error: function(data) {
                        DevExpress.ui.notify(data.Message, "error");
                    }
                });
            }
        });
    });

    $(function() {
        $("#DeleteFavoriteMoviesButton").dxButton({
            onClick: function() {
                $.ajax({
                    url: "/MovieTask/DeleteFavoriteMovies",
                    type: "POST",
                    success: function(data) {
                        DevExpress.ui.notify(data.Message, "success");
                    },
                    error: function(data) {
                        DevExpress.ui.notify(data.Message, "error");
                    }
                });
            }
        });
    });

     $(function() {
        $("#SyncMovieButton").dxButton({
            onClick: function() {
                $.ajax({
                    url: "/MovieTask/SyncFolderWithTmdb",
                    type: "POST",
                    success: function(data) {
                        DevExpress.ui.notify(data.Message, "success");
                    },
                    error: function(data) {
                        DevExpress.ui.notify(data.Message, "error");
                    }
                });
            }
        });
    });

    $(function() {
        $("#deleteBadMovies").dxButton({
            onClick: function() {
                $.ajax({
                    url: "/MovieTask/DeleteBadMovies",
                    type: "POST",
                    success: function(data) {
                        DevExpress.ui.notify(data.Message, "success");
                    },
                    error: function(data) {
                        DevExpress.ui.notify(data.Message, "error");
                    }
                });
            }
        });
    });
</script>

